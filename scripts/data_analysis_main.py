import numpy as np
import pandas as pd
from .prep_data import full_data_load, split_by_class, split_by_gender
from .data_analysis_tools import plot_age_histograms, extract_counts_for_mris, basic_duration_analysis, extract_race_counts

df = full_data_load()
mf, ff = split_by_gender(df)
plot_age_histograms(df, mf, ff)
#number of subjects and scans
print("Number of subjects: " , df.shape[0])
print("Number of scans: ", df['mr_sessions'].sum())
print("Number of CN participants at baseline: ", df[df['class_at_baseline'] == "CN"].shape[0])
print("Number of CI participants at baseline: ", df[df['class_at_baseline'] == "CI"].shape[0])
print("Number of CN participants at final scan: ", df[df['class_at_final'] == "CN"].shape[0])
print("Number of CI participants at final scan: ", df[df['class_at_final'] == "CI"].shape[0])
df_CN, df_CI = split_by_class(df)
print("Average age,sd at baseline (CN):", pd.to_numeric(df_CN['age'], errors='coerce').mean(), pd.to_numeric(df_CN['age'], errors='coerce').std())
print("Average age,sd at baseline (CI):", pd.to_numeric(df_CI['age'], errors='coerce').mean(), pd.to_numeric(df_CI['age'], errors='coerce').std())
print("Average age,sd at baseline (total):", pd.to_numeric(df['age'], errors='coerce').mean(), pd.to_numeric(df['age'], errors='coerce').std())
df_CN_male, df_CN_female = split_by_gender(df_CN)
df_CI_male, df_CI_female = split_by_gender(df_CI)
print("Male in CN: ", df_CN_male.shape[0])
print("Female in CN: ", df_CN_female.shape[0])
print("Male in CI: ", df_CI_male.shape[0])
print("Female in CI: ", df_CI_female.shape[0])
print("Education in CN: ", pd.to_numeric(df_CN['education'], errors='coerce').mean(), pd.to_numeric(df_CN['education'], errors='coerce').std())
print("Education in CI: ", pd.to_numeric(df_CI['education'], errors='coerce').mean(), pd.to_numeric(df_CI['education'], errors='coerce').std())
print("Education (total): " ,pd.to_numeric(df['education'], errors='coerce').mean(), pd.to_numeric(df['education'], errors='coerce').std())

CN_unique_mri, CN_mri_counts = extract_counts_for_mris(df_CN)
CI_unique_mri, CI_mri_counts = extract_counts_for_mris(df_CI)
print("Unique MRIs in CN: ", CN_unique_mri)
print("The respective counts: ", CN_mri_counts)
print("Unique MRIs in CI: ", CI_unique_mri)
print("The respective counts: ", CI_mri_counts)
print("Basic duration analysis CN: ", basic_duration_analysis(df_CN))
print("Basic duration analysis CI: ", basic_duration_analysis(df_CI))
print("Basic duration analysis total: ", basic_duration_analysis(df))
different_race, race_counts = extract_race_counts(df)
print("Race groups", different_race, race_counts)